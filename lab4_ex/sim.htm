<!DOCTYPE html>
<html>
<head>
    <title>Parking Simulator</title>
    <meta charset="utf-8" />
    <script src="inc/jquery-2.0.0.min.js"></script>
    <script src="inc/jquery-3.2.1.min.js"></script>
    <script src="inc/jquery-1.10.2.js"></script>
    <script src="inc/bootstrap.min.js"></script>
    <link href="inc/bootstrap.min.css" rel="stylesheet" />


    <style>

        /*
        td:hover {
                background-color: silver;
            }
        */
        .isParking {
            border: 1px solid silver;
            background-color: lightblue;
        }

        .isBlockingParking {
            border: 1px solid silver;
            background-color: darkred;
        }

        .isPass {
            border: 1px solid silver;
            background-color: silver;
        }

        .isNotParking {
            border: 1px solid white;
            background-color: black;
        }

        table {
            border-collapse: collapse;
        }

        td {
            width: 20px;
            height: 30px;
        }
    </style>

    <script>

        //create the array of objects:
        var mainarr = [];
        for (var i = 0; i < 10; i++) {
            for (var j = 0; j < 10; j++) {
                var arr = [];
                arr.push(i, j);
                var obj = {
                    'exitT': null, //exit time
                    'userID': null, //user id. if null- the parking slot is empty
                    'ParkingSlotNum': arr, //parking slot number
                };
                mainarr.push(obj);
            }
        }
        var b = 3; //just for debugg


        //structure of the parking lot
        var Config = {
            x: 10, //number of rows
            y: 10, //number of cols
            IsParking: [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [0, 8], [0, 9],
            [4, 0], [4, 1], [4, 2], [4, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9],
            [5, 0], [5, 1], [5, 2], [5, 3], [5, 4], [5, 5], [5, 6], [5, 7], [5, 8], [5, 9],
            [9, 0], [9, 1], [9, 2], [9, 3], [9, 4], [9, 5], [9, 6], [9, 7], [9, 8], [9, 9]],
            isBlockingParking: [[1, 0], [1, 1], [1, 2], [1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9],
            [3, 0], [3, 1], [3, 2], [3, 3], [3, 4], [3, 5], [3, 6], [3, 7], [3, 8], [3, 9],
            [6, 0], [6, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9],
            [8, 0], [8, 1], [8, 2], [8, 3], [8, 4], [8, 5], [8, 6], [8, 7], [8, 8], [8, 9]],
            IsPassover: [[2, 0], [2, 1], [2, 2], [2, 3], [2, 4], [2, 5], [2, 6], [2, 7], [2, 8], [2, 9],
            [7, 0], [7, 1], [7, 2], [7, 3], [7, 4], [7, 5], [7, 6], [7, 7], [7, 8], [7, 9]],
            IsNone: [[1, 4], [2, 4], [4, 4], [5, 4], [7, 4], [8, 4]]
        };

        //each var in the array present how much cars intrance in each hour during day
        var arrCars = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 10, 20, 5,5,5,5,0,0,0]; //24 hours

        var maxCars = 100;


        $(function () {
            // create table
            for (var i = 0; i < Config.x; i++) {
                var tr = $("<tr/>");
                for (var j = 0; j < Config.y; j++) {
                    var td = $("<td/>");
                    $(tr).append(td);
                }
                $("#parking").append(tr);
            }
            // create passover and not parking area
            for (var l = 0; l < Config.IsPassover.length; l++)
                for (var i = 0; i < Config.x; i++)
                    for (var j = 0; j < Config.y; j++) {
                        if (Config.IsPassover[l][0] == i && Config.IsPassover[l][1] == j)
                            $("#parking").find("tr").eq(i).find("td").eq(j).addClass("isPass");
                    }
            /*
            for (var l = 0; l < Config.IsNone.length; l++)
                for (var i = 0; i < Config.x; i++)
                    for (var j = 0; j < Config.y; j++) {
                        if (Config.IsNone[l][0] == i && Config.IsNone[l][1] == j)
                            $("#parking").find("tr").eq(i).find("td").eq(j).addClass("isNotParking");
                    }*/
        });


        //returm number between min to max
        function getRandom(min, max) {
            return Math.floor(Math.random() * (1 + max - min)) + min;
        }

        function getRandomSp(min, max, ar) {
            return ar[Math.floor(Math.random() * (1 + max - min)) + min];
        }


        //fill the parking lot:
        var counter = 0;
        var flagBlocking1 = 0; // flag==1 when the cars start blocking 
        var flagBlocking2; // flag==1 when the cars start blocking in check2 phase
        var i = 0;
        function Fill() {
            var flagEndParking = 0; //flag==1 when the algoritem find parking slot
            
            while (1) {
                if (counter==80) window.alert(counter);
                if (arrCars[i] > 0) { //if there is more car in this hour
                    //var d = new Date();
                    //var entranceTime = d.getHours();
                    var entranceTime = i;
                    var exitTime = getRandom(i+1, 23); //enforce exitTime>= entranceTime

                    //document.write(Config.IsParking.length);
                    switch (1) {
                        case 1:
                            flagEndParking = 0;
                            if (flagBlocking1 == 1) blockingFunc();
                            else {
                                for (k = 0; k < Config.x; k++) {
                                    for (p = 0; p < Config.y; p++) {
                                        if (mainarr[k * 10 + p].userID == null) {

                                            for (var n = 0; n < Config.IsParking.length; n++) {

                                                if ((Config.IsParking[n][0] == mainarr[k * 10 + p].ParkingSlotNum[0])
                                                    && (Config.IsParking[n][1] == mainarr[k * 10 + p].ParkingSlotNum[1])) {
                                                    mainarr[k * 10 + p].exitT = exitTime;
                                                    $("#parking").find("tr").eq(k).find("td").eq(p).addClass("isParking");
                                                    counter++;
                                                    mainarr[k * 10 + p].userID = 30; //לשנות
                                                    if (arrCars[i] > 0) arrCars[i]--;
                                                    flagEndParking = 1;
                                                    if (Config.IsParking[n][0] == 9 && Config.IsParking[n][1] == 9) {//אולי לא צריך
                                                        flagBlocking1 = 1;
                                                    }
  
                                                    function isParkingSlotsFull()
                                                    {
                                                        for (k = 0; k < Config.x; k++) {
                                                            for (p = 0; p < Config.y; p++) {
                                                                if (mainarr[k * 10 + p].userID == null) return false;
                                                               // if ((mainarr[k * 10 + p].userID == null) &&
                                                                    //((mainarr[k * 10 + p].ParkingSlotNum[0] != 9) || mainarr[k * 10 + p].ParkingSlotNum[1] != 9)) { break; }
                                                            }
                                                        }
                                                        return true;
                                                    }//end isParkingSlotsFull function
                                                    if (isParkingSlotsFull == true) flagBlocking1 = 1;

                                                    break;
                                                }
                                            }
                                        }
                                        if (flagEndParking == 1) break;
                                    }
                                    if (flagEndParking == 1) break;
                                }
                            }

                            function blockingFunc() {
                                flagEndParking = 0;
                                //if (flagBlocking2 != 1) {
                                    for (var k2 = 0; k2 < Config.x; k2++) {
                                        for (var p2 = 0; p2 < Config.y; p2++) {
                                            //check if parking slot is empty:
                                            if (mainarr[k2 * 10 + p2].userID == null) {//check if exit time of this car>= exit time of the blocked car:
                                                if (k2 == 1) blockedRow = 0;
                                                else if (k2 == 3) blockedRow = 4;
                                                else if (k2 == 6) blockedRow = 5;
                                                else if (k2 == 8) blockedRow = 9;
                                                if (exitTime <= mainarr[blockedRow * 10 + p2].exitT) {
                                                    for (var n2 = 0; n2 < Config.isBlockingParking.length; n2++) {
                                                        if ((Config.isBlockingParking[n2][0] == mainarr[k2 * 10 + p2].ParkingSlotNum[0])
                                                            && (Config.isBlockingParking[n2][1] == mainarr[k2 * 10 + p2].ParkingSlotNum[1])) {
                                                            mainarr[k2 * 10 + p2].exitT = exitTime;
                                                            $("#parking").find("tr").eq(k2).find("td").eq(p2).addClass("isBlockingParking");
                                                            counter++;
                                                            mainarr[k2 * 10 + p2].userID = 30;
                                                            if (arrCars[i] > 0) arrCars[i]--;
                                                            flagEndParking = 1;
                                                            break;
                                                        }
                                                    }
                                                }
                                            }
                                            if (flagEndParking == 1) break;
                                        }
                                        if (flagEndParking == 1) break;
                                    }
                                //}

                                //check2: (when car1 blocking car2 that car1's exitT>car2's exitT)
                                if (k2 == 10) flagBlocking2 = 1;
                                if (flagBlocking2 == 1) {
                                    for (var k2 = 0; k2 < Config.x; k2++) {
                                        for (var p2 = 0; p2 < Config.y; p2++) {
                                            //check if parking slot is empty:
                                            if (mainarr[k2 * 10 + p2].userID == null) {//check if exit time of this car>= exit time of the blocked car:
                                                for (var n2 = 0; n2 < Config.isBlockingParking.length; n2++) {
                                                    if ((Config.isBlockingParking[n2][0] == mainarr[k2 * 10 + p2].ParkingSlotNum[0])
                                                        && (Config.isBlockingParking[n2][1] == mainarr[k2 * 10 + p2].ParkingSlotNum[1])) {
                                                        mainarr[k2 * 10 + p2].exitT = exitTime;
                                                        $("#parking").find("tr").eq(k2).find("td").eq(p2).addClass("isBlockingParking");
                                                        counter++;
                                                        mainarr[k2 * 10 + p2].userID = 30;
                                                        if (arrCars[i] > 0) arrCars[i]--;
                                                        flagEndParking = 1;
                                                        break;
                                                    }
                                                }
                                            }
                                            if (flagEndParking == 1) break;
                                        }
                                        if (flagEndParking == 1) break;
                                    }
                                }//end of check2
                            }// end funcc function



                        case 2:
                            day = "Tuesday";
                        case 3:
                            day = "Wednesday";
                    } //end switch
                }
                else { i++; exitCars(i); }; //go here if arrCars[i]== 0 (no more cars in this hour), so i++ is the next hour
                if (flagEndParking == 1) break; //break fill (end of entrance of specific car)
            }
        }//end of fill function

        function exitCars(i) {
            for (var k2 = 0; k2 < Config.x; k2++) {
                for (var p2 = 0; p2 < Config.y; p2++) {
                    if (mainarr[k2 * 10 + p2].userID != null && mainarr[k2 * 10 + p2].exitT == i) {//check if the parking slot is'nt empty and if the exit hour is i
                        //when the row is 'isParking' row:
                        if (k2 == 0) blockingRow = 1;
                        else if (k2 == 4) blockingRow = 3;
                        else if (k2 == 5) blockingRow = 6;
                        else if (k2 == 9) blockingRow = 8;
                        //when the row is 'isBlockingParking' row:
                        else blockingRow == null;


                        if (blockingRow != null)//when the row is 'isParking' row
                        {
                            if (mainarr[blockingRow * 10 + p2].userID != null)//check if there is a blocking car
                            {
                                if (mainarr[k2 * 10 + p2].exitT <= mainarr[blockingRow * 10 + p2].exitT)//check if exit time of this car< exit time of the blocked car
                                {
                                    var tempExitT = mainarr[blockingRow * 10 + p2].exitT;
                                    var tempUserID = mainarr[blockingRow * 10 + p2].userID;
                                    mainarr[blockingRow * 10 + p2].exitT = null;
                                    mainarr[blockingRow * 10 + p2].userID = null;
                                    $("#parking").find("tr").eq(blockingRow).find("td").eq(p2).removeClass("isBlockingParking");
                                    mainarr[k2 * 10 + p2].exitT = tempExitT;
                                    mainarr[k2 * 10 + p2].userID = tempUserID;
                                    flagBlocking1 = 0; flagBlocking2 = 0;
                                    //window.alert(k2);
                                }
                            }
                            else {
                                mainarr[k2 * 10 + p2].exitT = null;
                                mainarr[k2 * 10 + p2].userID = null;
                                $("#parking").find("tr").eq(k2).find("td").eq(p2).removeClass("isParking");
                                flagBlocking1 = 0; flagBlocking2=0;
                            } 
                        }
                        else {
                            mainarr[k2 * 10 + p2].exitT = null;
                            mainarr[k2 * 10 + p2].userID = null;
                            $("#parking").find("tr").eq(k2).find("td").eq(p2).removeClass("isParking");
                            flagBlocking1 = 0; flagBlocking2 = 0;
                        } 
                    }
                    
                }
            }
        } //end of exitCars function



        function Clear() {
            $.each($(".isParking"),
                function (i, o) {
                    $(o).removeClass("isParking");
                });
        }
    </script>


    <script>//clock
        function startTime() {
            var today = new Date();
            var h = today.getHours();
            var m = today.getMinutes();
            var s = today.getSeconds();
            m = checkTime(m);
            s = checkTime(s);
            document.getElementById('txt').innerHTML =
                h + ":" + m + ":" + s;
            var t = setTimeout(startTime, 500);
        }
        function checkTime(i) {
            if (i < 10) { i = "0" + i };  // add zero in front of numbers < 10
            return i;
        }
    </script>

</head>
<body onload="startTime()">
    <!--to clock-->
    <div id="txt" style="background-color:snow;width: 500px; margin: 20px auto;text-align: center"></div><!--clock-->
    <div style="width: 500px; margin: 20px auto">
        <table class="table table-condensed table-bordered" id="parking"></table>
        <div style="text-align: center">
            <button type="button" class="btn btn-primary" onclick="Fill()">Fill</button>
            <button type="button" class="btn btn-warning" onclick="Clear()">Clear</button>
        </div>
    </div>
    <!--<p id="demo"></p>-->
</body>
</html>
