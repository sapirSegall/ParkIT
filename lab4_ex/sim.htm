<!DOCTYPE html>
<html>
<head>
    <title>Parking Simulator</title>
    <meta charset="utf-8" />
    <script src="inc/jquery-2.0.0.min.js"></script>
    <script src="inc/jquery-3.2.1.min.js"></script>
    <script src="inc/jquery-1.10.2.js"></script>
    <script src="inc/bootstrap.min.js"></script>
    <link href="inc/bootstrap.min.css" rel="stylesheet" />
    

    <style>
        
        /*
        td:hover {
                background-color: silver;
            }
        */
        .isParking {
            border: 1px solid silver;
            background-color: lightblue;
           
        }

        .isBlockingParking {
            border: 1px solid silver;
            background-color: darkred;
        }

        .isPass {
            border: 1px solid silver;
            background-color: silver;
        }

        .isNotParking {
            border: 1px solid white;
            background-color: black;
        }

        table {
            border-collapse: collapse;
        }

        td {
            width: 20px;
            height: 30px;
        }
       
    </style>

    <script>
        /*
        var obj1 = {
            'A': 1,
            'B': 2,
            'C': 3
        };

        var obj2 = {
            'A': 1,
            'B': 2,
            'C': 3
        };

        var obj3 = {
            'A': 1,
            'B': 2,
            'C': 3
        };

        var arr = [];

        arr.push(obj1);
        arr.push(obj2);
        arr.push(obj3);

        var BArr = [];

        for (var i = 0; i < arr.length; i++) {
            BArr.push(arr[i].B);
        }



        var slot = {
            'ParkingSlotNum': [null,null],
            'userID': null,
            'exitT': null
        };
        var arrS = [];
        ;
        for (var i = 0; i < 25; i++) {
            arrS.push(slot);
            slot.userID = i;
        }
        */
        //document.write(arrS[6].userID)
        
        

        var Config = {
            x: 9, //number of rows
            y: 9, //number of cols
            IsParking: [[0,0], [0,1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [0, 8],
                        [4, 0],[4, 1], [4, 2], [4, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8],
                        [8, 0], [8, 1], [8, 2], [8, 3], [8, 4], [8,5], [8, 6], [8, 7], [8,8]
                        [7, 0], [7, 1], [7, 2], [7, 3], [7, 4],[7,5], [7, 6], [7, 7]],
            isBlockingParking: [[1, 0], [1, 1], [1, 2], [1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8],
                                [3,0], [3, 1], [3, 2], [3, 3], [3, 4], [3, 5], [3, 6], [3, 7], [3, 8],
                                [5,0], [5, 1], [5, 2], [5, 3],[5,4], [5, 5], [5, 6], [5, 7], [5, 8],],
            IsPassover: [[2, 0], [2, 1],[2,2], [2, 3], [2, 4], [2, 5], [2, 6], [2, 7],[2,8],
                         [6, 0], [6, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8]],
            IsNone: [[1, 4], [2, 4], [4, 4], [5, 4], [7, 4], [8, 4]]
        };
        
        //var arr = [1, 1, 1, 1, 1, 2, 3, 4, 5, 6, 7, 7, 8, 8, 8, 8];//
        //var arc = [1, 1, 1, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 10, 10, 10];//

        var arrCars= [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 10, 10]; //from 6:00 to 00:00 (18 hours)

        //parking slot object
        var parkingSlot = {
            ParkingSlotNum: [[0,0], [0,1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [0, 8],
                             [1,0],[1,1],[1, 2], [1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8],
                             [2, 0], [2, 1], [2,2],[2, 3], [2, 4], [2, 5], [2, 6], [2, 7],[2,8],
                             [3, 0], [3, 1], [3, 2],[3,3], [3, 4], [3, 5], [3, 6], [3, 7],[3,8],
                             [4,0],[4, 1], [4, 2], [4, 3],[4,4], [4, 5], [4, 6], [4, 7], [4, 8],
                             [5,0],[5, 1], [5, 2], [5, 3], [5,4],[5, 5], [5, 6], [5, 7], [5, 8],
                            [6, 0], [6, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8],
                            [7, 0], [7, 1], [7, 2], [7, 3], [7, 4],[7,5], [7, 6], [7, 7],[7,8],
                            [8, 0], [8, 1], [8, 2], [8, 3], [8, 4],[8,5], [8, 6], [8, 7],[8,8]],
            userID: [null, null, null, null, null, null, null, null,null,
                     null, null, null, null, null, null, null, null,null,
                     null, null, null, null, null, null, null, null,null,
                null, null, null, null, null, null, null, null,null,
                null, null, null, null, null, null, null, null,null,
                null, null, null, null, null, null, null, null,null,
                null, null, null, null, null, null, null, null, null,
                null, null, null, null, null, null, null, null, null,
                null, null, null, null, null, null, null, null, null],
            exitT: [null, null, null, null, null, null, null, null, null,
                null, null, null, null, null, null, null, null, null,
                null, null, null, null, null, null, null, null, null,
                null, null, null, null, null, null, null, null, null,
                null, null, null, null, null, null, null, null, null,
                null, null, null, null, null, null, null, null, null,
                null, null, null, null, null, null, null, null, null,
                null, null, null, null, null, null, null, null, null,
                null, null, null, null, null, null, null, null, null],
            
        };
        //document.write(parkingSlot.userID[3]);
        
        var maxCars = 81;
        var rows = 9; var cols = 9;
        var pLot = [81]; //array of parking lot

        pLot[0] = parkingSlot;

        
        /*intilaize the Parking Slots Number
            for (var m = 0; m < rows; m++)
                for (var f = 0; f < cols; f++) {
                    pLot[m * 10 + f] = parkingSlot;
                    
                   
                    pLot[m * 10 + f].ParkingSlotNum[0] = m;
                    //document.write(pLot[m * 10 + f].ParkingSlotNum[0]);
                    pLot[m * 10 + f].ParkingSlotNum[1] = f;
                    //document.write(pLot[m * 10 + f].ParkingSlotNum[0]);
                }
        document.write(pLot[0].ParkingSlotNum[0]);
        */
            

        $(function () {
            // create table
            for (var i = 0; i < Config.x; i++) {
                var tr = $("<tr/>");
                for (var j = 0; j < Config.y; j++) {
                    var td = $("<td/>");
                    $(tr).append(td);
                }
                $("#parking").append(tr);
            }
            // create passover and not parking area
            for (var l = 0; l < Config.IsPassover.length; l++)
                for (var i = 0; i < Config.x; i++)
                    for (var j = 0; j < Config.y; j++) {
                        if (Config.IsPassover[l][0] == i && Config.IsPassover[l][1] == j)
                            $("#parking").find("tr").eq(i).find("td").eq(j).addClass("isPass");
                    }
            /*
            for (var l = 0; l < Config.IsNone.length; l++)
                for (var i = 0; i < Config.x; i++)
                    for (var j = 0; j < Config.y; j++) {
                        if (Config.IsNone[l][0] == i && Config.IsNone[l][1] == j)
                            $("#parking").find("tr").eq(i).find("td").eq(j).addClass("isNotParking");
                    }*/
        });

        //returm number between min to max
        function getRandom(min, max) {
            return Math.floor(Math.random() * (1 + max - min)) + min;
        }

        function getRandomSp(min, max, ar) {
            return ar[Math.floor(Math.random() * (1 + max - min)) + min];
        }

        /*var maxCars = 60;
        function Fill() {
            for (var i = 0; i < maxCars; i++) {
                var r = getRandomSp(0, arr.length - 1, arr) - 1;
                var c = getRandomSp(0, arc.length - 1, arc) - 1;
                for (var j = 0; j < Config.IsParking.length; j++) {
                    if (Config.IsParking[j][0] == r && Config.IsParking[j][1] == c) {
                        $("#parking").find("tr").eq(r).find("td").eq(c).addClass("isParking");
                        var myVar = setInterval(Fill, 1000);
                    }
                }
            }
        }*/
        var flag = 0;
        function Fill() {
            
            for (var i = 0; i < arrCars.length - 1; i++) //big loop on arrCars
                {
                for (var j = 0; j < arrCars[i]; j++) 
                   {
                    var exitTime = getRandom(7, 23);
                    var d = new Date();
                    var entranceTime = d.getHours();
                    //document.write(Config.IsParking.length);

                    switch (1) {
                        case 1:
                            if (flag == 0) {
                                for (k = 0; k < rows; k++) {
                                    for (p = 0; p < cols; p++) {
                                        if (parkingSlot.userID[k * 10 + p] == null) {
                                            parkingSlot.exitT = exitTime;
                                            for (var n = 0; n < Config.IsParking.length; n++) {
                                                if ((Config.IsParking[n][0] == parkingSlot.ParkingSlotNum[k * 10 + p][0])
                                                    && (Config.IsParking[n][1] == parkingSlot.ParkingSlotNum[k * 10 + p][1])) {
                                                    $("#parking").find("tr").eq(k).find("td").eq(p).addClass("isParking");
                                                    parkingSlot.userID[k * 10 + p] = 305;
                                                    if (Config.IsParking[n][0] == 8 && Config.IsParking[n][1] == 8) {
                                                        flag = 1;
                                                        endOfInsert();

                                                    }
                                                    endOfInsert();
                                                }
                                                
                                            }
                                        }
                                    }
                                }
                            }
                            function continueToBlocking() {
                            for (k = 0; k < rows; k++) {
                                //document.write(k);//01234
                                for (p = 0; p < cols; p++) {
                                    //document.write(k);//10 iter of 01234
                                    if (parkingSlot.userID[k * 10 + p] == null) {
                                        
                                        parkingSlot.exitT = exitTime;
                                        //document.write(k);//10 iter of 01234

                                        for (var n = 0; n < Config.isBlockingParking.length; n++) {
                                            //document.write(k);
                                            if ((Config.isBlockingParking[n][0] == parkingSlot.ParkingSlotNum[k * 10 + p][0])
                                             && (Config.isBlockingParking[n][1] == parkingSlot.ParkingSlotNum[k * 10 + p][1])) {
                                                $("#parking").find("tr").eq(k).find("td").eq(p).addClass("isBlockingParking");
                                                parkingSlot.userID[k * 10 + p] = 305;
                                                endOfInsert();
                                            }
                                        }
                                    }
                                }
                                }
                            }

                            function endOfInsert()
                                     { break; }
                        case 2:
                            day = "Tuesday";
                            break;
                        case 3:
                            day = "Wednesday";
                            break;
                    }
                   }
                }
        }
        Fill();
        

        function Clear() {
            $.each($(".isParking"),
                function (i, o) {
                    $(o).removeClass("isParking");
                });
        }
    </script>


    <script>//clock
        function startTime() {
            var today = new Date();
            var h = today.getHours();
            var m = today.getMinutes();
            var s = today.getSeconds();
            m = checkTime(m);
            s = checkTime(s);
            document.getElementById('txt').innerHTML =
                h + ":" + m + ":" + s;
            var t = setTimeout(startTime, 500);
        }
        function checkTime(i) {
            if (i < 10) { i = "0" + i };  // add zero in front of numbers < 10
            return i;
        }
    </script>

</head>
<body onload="startTime()">
    <!--to clock-->
    <div id="txt" style="background-color:snow;width: 500px; margin: 20px auto;text-align: center"></div><!--clock-->
    <div style="width: 500px; margin: 20px auto">
        <table class="table table-condensed table-bordered" id="parking"></table>
        <div style="text-align: center">
            <button type="button" class="btn btn-primary" onclick="Fill()">Fill</button>
            <button type="button" class="btn btn-warning" onclick="Clear()">Clear</button>
        </div>
    </div>
    <!--<p id="demo"></p>-->
</body>
</html>
